---
import { brands, years, conditions, locations } from '../data/trucks';
---

<div class="bg-white p-6 rounded-lg shadow-lg mb-8">
  <h3 class="text-lg font-semibold text-gray-900 mb-4">Bộ lọc tìm kiếm</h3>
  
  <form id="filter-form" class="space-y-4">
    <!-- Search -->
    <!-- <div>
      <label for="search" class="block text-sm font-medium text-gray-700 mb-2">
        Tìm kiếm
      </label>
      <input 
        type="text" 
        id="search" 
        name="search"
        placeholder="Nhập tên xe, thương hiệu..."
        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
      />
    </div> -->
    
    <!-- Brand -->
    <!-- <div>
      <label for="brand" class="block text-sm font-medium text-gray-700 mb-2">
        Thương hiệu
      </label>
      <select 
        id="brand" 
        name="brand"
        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
      >
        <option value="">Tất cả thương hiệu</option>
        {brands.map(brand => (
          <option value={brand}>{brand}</option>
        ))}
      </select>
    </div> -->
    

    <!-- Buttons -->
    <div class="flex space-x-3">
      <button 
        type="submit"
        class="flex-1 bg-primary-600 text-white px-3 py-2 rounded-lg hover:bg-primary-700 transition-colors font-medium"
      >
        Áp dụng bộ lọc
      </button>
      <button 
        type="button"
        id="clear-filters"
        class="flex-1 bg-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-400 transition-colors font-medium"
      >
        Xóa bộ lọc
      </button>
    </div>
  </form>
</div>

<script>
  // Filter functionality
  document.addEventListener('DOMContentLoaded', function() {
    const filterForm = document.getElementById('filter-form');
    const clearButton = document.getElementById('clear-filters');
    const truckCards = document.querySelectorAll('[data-truck]');
    
    function filterTrucks() {
      const formData = new FormData(filterForm);
      const search = formData.get('search')?.toLowerCase() || '';
      const brand = formData.get('brand') || '';
      const year = formData.get('year') || '';
      const condition = formData.get('condition') || '';
      const location = formData.get('location') || '';
      const minPrice = parseInt(formData.get('minPrice')) || 0;
      const maxPrice = parseInt(formData.get('maxPrice')) || Infinity;
      
      truckCards.forEach(card => {
        const truckData = JSON.parse(card.dataset.truck);
        let show = true;
        
        // Search filter
        if (search && !truckData.title.toLowerCase().includes(search) && 
            !truckData.brand.toLowerCase().includes(search)) {
          show = false;
        }
        
        // Brand filter
        if (brand && truckData.brand !== brand) {
          show = false;
        }
        
        // Year filter
        if (year && truckData.year !== parseInt(year)) {
          show = false;
        }
        
        // Condition filter
        if (condition && truckData.condition !== condition) {
          show = false;
        }
        
        // Location filter
        if (location && truckData.location !== location) {
          show = false;
        }
        
        // Price filter
        if (truckData.price < minPrice || truckData.price > maxPrice) {
          show = false;
        }
        
        card.style.display = show ? 'block' : 'none';
      });
    }
    
    if (filterForm) {
      filterForm.addEventListener('submit', function(e) {
        e.preventDefault();
        filterTrucks();
      });
      
      // Real-time filtering on input change
      const inputs = filterForm.querySelectorAll('input, select');
      inputs.forEach(input => {
        input.addEventListener('input', filterTrucks);
        input.addEventListener('change', filterTrucks);
      });
    }
    
    if (clearButton) {
      clearButton.addEventListener('click', function() {
        filterForm.reset();
        truckCards.forEach(card => {
          card.style.display = 'block';
        });
      });
    }
  });
</script>

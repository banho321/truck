---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import TruckCard from '../../components/TruckCard.astro';
import { getAllTrucks, getSpecValue, loadTrucksData } from '../../data/trucksData';

// Load data and get trucks
const trucksData = loadTrucksData();
const trucks = getAllTrucks();

// Group trucks by category (as per original structure)
// Sort categories to prioritize THACO TRUCK first
const trucksByCategory = trucksData.cars ? trucksData.cars
  .map(category => ({
    id: category.id,
    name: category.categoryCarname,
    trucks: category.car || [],
    // Add brand info for better identification
    brand: category.car && category.car.length > 0 ? 
      (category.car[0].brand || category.categoryCarname.split(' ')[0]) : 
      'Unknown'
  }))
  .sort((a, b) => {
    // Prioritize THACO categories first
    const aIsThaco = a.name.toUpperCase().includes('THACO');
    const bIsThaco = b.name.toUpperCase().includes('THACO');
    
    if (aIsThaco && !bIsThaco) return -1;
    if (!aIsThaco && bIsThaco) return 1;
    
    // Within THACO, prioritize VAN first
    if (aIsThaco && bIsThaco) {
      const aIsVan = a.name.toUpperCase().includes('VAN');
      const bIsVan = b.name.toUpperCase().includes('VAN');
      
      if (aIsVan && !bIsVan) return -1;
      if (!aIsVan && bIsVan) return 1;
    }
    
    // Then sort by name
    return a.name.localeCompare(b.name);
  }) : [];
---

<Layout 
  title="Danh s√°ch xe t·∫£i | TruckSales"
  description="Kh√°m ph√° b·ªô s∆∞u t·∫≠p xe t·∫£i ƒëa d·∫°ng v·ªõi nhi·ªÅu th∆∞∆°ng hi·ªáu v√† m·∫´u m√£ kh√°c nhau. T·ª´ xe t·∫£i nh·∫π ƒë·∫øn xe t·∫£i n·∫∑ng, ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu v·∫≠n chuy·ªÉn."
>
  <Header />
  <main>
    <!-- Breadcrumb -->
    <section class="bg-gray-50 py-4">
      <div class="container mx-auto px-4">
        <nav class="text-sm">
          <ol class="flex items-center space-x-2">
            <li><a href="/" class="text-primary-600 hover:text-primary-700">Trang ch·ªß</a></li>
            <li class="text-gray-400">/</li>
            <li class="text-gray-600">Xe t·∫£i</li>
          </ol>
        </nav>
      </div>
    </section>

    <!-- Hero Section -->
    <section class="py-16 bg-gradient-to-r from-primary-600 to-primary-700 text-white">
      <div class="container mx-auto px-4 text-center">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">
          Danh s√°ch xe t·∫£i
        </h1>
        <p class="text-xl mb-8 text-gray-100 max-w-3xl mx-auto">
          Kh√°m ph√° b·ªô s∆∞u t·∫≠p xe t·∫£i ƒëa d·∫°ng v·ªõi nhi·ªÅu th∆∞∆°ng hi·ªáu v√† m·∫´u m√£ kh√°c nhau. 
          T·ª´ xe t·∫£i nh·∫π ƒë·∫øn xe t·∫£i n·∫∑ng, ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu v·∫≠n chuy·ªÉn.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href="tel:0936777735" 
            class="bg-white text-primary-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
          >
            üìû Hotline: 0936777735
          </a>
          <a 
            href="/contact" 
            class="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-primary-600 transition-colors"
          >
            üí¨ T∆∞ v·∫•n tr·ª±c tuy·∫øn
          </a>
        </div>
      </div>
    </section>

    <!-- Brand Selection -->
    <section class="py-8 bg-white border-b">
      <div class="container mx-auto px-4">
        <div class="flex flex-wrap justify-center items-center gap-8">
          {trucksData.brands.map((brand, index) => (
            <div class="flex flex-col items-center cursor-pointer group" data-brand={brand.name}>
              <div class="w-20 h-20 mb-2 flex items-center justify-center">
                <img 
                  src={brand.image} 
                  alt={brand.name}
                  class="w-full h-full object-contain group-hover:scale-110 transition-transform"
                />
              </div>

              {index === 0 && (
                <div class="w-full h-1 bg-primary-600 mt-2 rounded"></div>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Main Content with Sidebar -->
    <section class="py-8">
      <div class="container mx-auto px-4">
        <div class="flex flex-col lg:flex-row gap-8">
          <!-- Sidebar Filters -->
          <div class="lg:w-1/4">
            <div class="bg-white rounded-lg shadow-lg p-6 sticky top-4">
              <h3 class="text-lg font-semibold text-gray-900 mb-6">B·ªô l·ªçc</h3>
              
              <!-- Category Filters -->
              <div class="mb-6">
                <h4 class="text-sm font-medium text-gray-700 mb-3">Danh m·ª•c xe</h4>
                <div class="space-y-2">
                  {trucksData.listCategories.map((category) => (
                    <label class="flex items-center">
                      <input 
                        type="checkbox" 
                        class="category-filter rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                        data-category={category.name}
                      >
                      <span class="ml-2 text-sm text-gray-700">{category.name}</span>
                    </label>
                  ))}
                </div>
              </div>
            </div>
          </div>

          <!-- Main Content -->
          <div id="trucks-section" class="lg:w-3/4">
            <!-- Results Summary -->
            <div class="mb-6">
              <p class="text-sm text-gray-600">
                Hi·ªÉn th·ªã <span class="font-semibold text-primary-600">{trucks.length}</span> xe t·∫£i
              </p>
            </div>

            <!-- Trucks by Brand -->
            <div id="trucks-content">
              {trucksByCategory.map((category) => (
                <div class="mb-12 truck-category" data-brand={category.brand}>
                  <h2 class="text-2xl font-bold text-gray-900 mb-6">
                    {category.name}
                    {category.brand && category.brand !== 'Unknown' && (
                      <span class="text-sm font-normal text-gray-600 ml-2">({category.brand})</span>
                    )}
                  </h2>
                  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                    {category.trucks.map((truck) => (
                      <div class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
                        <div class="relative">
                          <img 
                            src={truck.image} 
                            alt={truck.name}
                            class="w-full h-48 object-cover"
                            loading="lazy"
                          />
                          <div class="absolute top-4 left-4 bg-primary-600 text-white px-3 py-1 rounded-full text-sm font-semibold">
                            {truck.brand || (category.name ? category.name.split(' ')[0] : 'Unknown')}
                          </div>
                        </div>
                        
                        <div class="p-6">
                          <h3 class="text-lg font-semibold text-gray-900 mb-3">
                            {truck.name}
                          </h3>
                          
                          <div class="space-y-2 mb-4">
                            <div class="flex justify-between text-sm text-gray-600">
                              <span>T·∫£i tr·ªçng:</span>
                              <span class="font-medium">{getSpecValue(truck.basic_specification, 'T·∫£i tr·ªçng')}</span>
                            </div>
                            <div class="flex justify-between text-sm text-gray-600">
                              <span>Chi·ªÅu d√†i th√πng:</span>
                              <span class="font-medium">{getSpecValue(truck.basic_specification, 'Chi·ªÅu d√†i th√πng')}</span>
                            </div>
                            <div class="flex justify-between text-sm text-gray-600">
                              <span>D·ªãch v·ª• 24/7:</span>
                              <span class="font-medium">{getSpecValue(truck.basic_specification, 'D·ªãch v·ª• 24/7')}</span>
                            </div>
                          </div>
                          
                          <div class="flex items-center justify-center">
                            <a 
                              href={`/trucks/${truck.id}`}
                              class="w-full bg-primary-600 text-white px-4 py-3 rounded-lg hover:bg-primary-700 transition-colors text-sm font-medium text-center"
                            >
                              Xem chi ti·∫øt
                            </a>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-16 bg-primary-600 text-white">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-3xl md:text-4xl font-bold mb-4">
          Kh√¥ng t√¨m th·∫•y xe ph√π h·ª£p?
        </h2>
        <p class="text-xl mb-8 text-gray-100">
          ƒê·ªôi ng≈© t∆∞ v·∫•n chuy√™n nghi·ªáp c·ªßa ch√∫ng t√¥i s·∫Ω gi√∫p b·∫°n t√¨m xe t·∫£i ph√π h·ª£p nh·∫•t
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href="tel:0936777735" 
            class="bg-white text-primary-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
          >
            üìû G·ªçi ngay: 0936777735
          </a>
          <a 
            href="/contact" 
            class="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-primary-600 transition-colors"
          >
            üí¨ T∆∞ v·∫•n tr·ª±c tuy·∫øn
          </a>
        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<script>
  // Brand switching and category filtering functionality
  document.addEventListener('DOMContentLoaded', function() {
    const brandElements = document.querySelectorAll('[data-brand]');
    const truckCategories = document.querySelectorAll('.truck-category');
    const resultsCount = document.querySelector('.text-sm.text-gray-600 span');
    const categoryFilters = document.querySelectorAll('.category-filter');
    
    // Brand mapping - Ph√¢n lo·∫°i ch√≠nh x√°c theo h√£ng
    const brandMapping = {
      'THACO TRUCK': ['THACO', 'TOWNER', 'OLLIN'],
      'KIA': ['KIA', 'FRONTIER', 'BONGO', 'FORLAND'],
      'MITSUBISHI FUSO': ['FUSO', 'CANTER', 'FIGHTER'],
      'SINOTRUK': ['SINOTRUK', 'HOWO', 'AUMAN', 'GOLDEN DRAGON'],
      'S∆† MI R∆† MOOC': ['S∆† MI R∆† MO√ìC', 'SMRM', 'S∆° Mi', 'X∆∞∆°ng', 'S√†n', 'Ben', 'B·ªìn']
    };
    
    // Category mapping - Ph√¢n lo·∫°i theo danh m·ª•c xe (m·ªü r·ªông ƒë·ªÉ bao g·ªìm t·∫•t c·∫£ xe)
    const categoryMapping = {
      'T·∫£i nh·∫π m√°y xƒÉng': ['T·∫¢I NH·∫∏ M√ÅY XƒÇNG', 'TOWNER', 'THACO'],
      'T·∫£i nh·∫π m√°y d·∫ßu': ['T·∫¢I NH·∫∏ M√ÅY D·∫¶U', 'FRONTIER', 'KIA'],
      'T·∫£i van': ['T·∫¢I VAN', 'VAN', 'TOWNER VAN'],
      'T·∫£i trung': ['T·∫¢I TRUNG', 'CANTER', 'OLLIN', 'FUSO'],
      'Ben': ['BEN', 'FORLAND', 'XE BEN'],
      'ƒê·∫ßu k√©o': ['ƒê·∫¶U K√âO', 'AUMAN', 'HOWO', 'SINOTRUK'],
      'S∆° Mi R∆° Mooc': ['S∆† MI R∆† MO√ìC', 'SMRM', 'X∆∞∆°ng', 'S√†n', 'S∆° Mi']
    };
    
    let currentBrand = 'all'; // Default to show all brands
    let selectedCategories = new Set(); // Default to empty (show all categories)
    
    // Initialize with all trucks shown (no brand selected)
    function showAllTrucks() {
      truckCategories.forEach(category => {
        category.style.display = 'block';
      });
      
      // Update results count to show total
      if (resultsCount) {
        const totalTrucks = document.querySelectorAll('.truck-category .bg-white.rounded-lg').length;
        resultsCount.textContent = totalTrucks;
      }
    }
    
    function filterTrucksByBrandAndCategory(selectedBrand, selectedCats) {
      let visibleCount = 0;
      
      truckCategories.forEach(category => {
        const categoryBrand = category.getAttribute('data-brand');
        const categoryName = category.querySelector('h2').textContent;
        
        // Check brand filter
        let brandMatch = true; // Default to show all
        if (selectedBrand && selectedBrand !== 'all') {
          const brandKeywords = brandMapping[selectedBrand] || [selectedBrand];
          brandMatch = brandKeywords.some(keyword => 
            categoryBrand.includes(keyword) || 
            categoryName.includes(keyword)
          );
        }
        
        // Check category filter
        let categoryMatch = true; // Default to show all
        if (selectedCats.size > 0) {
          categoryMatch = false;
          for (let selectedCat of selectedCats) {
            const catKeywords = categoryMapping[selectedCat] || [selectedCat];
            if (catKeywords.some(keyword => 
              categoryName.toUpperCase().includes(keyword.toUpperCase()) ||
              categoryName.includes(keyword)
            )) {
              categoryMatch = true;
              break;
            }
          }
        }
        
        const shouldShow = brandMatch && categoryMatch;
        
        if (shouldShow) {
          category.style.display = 'block';
          const truckCards = category.querySelectorAll('.bg-white.rounded-lg');
          visibleCount += truckCards.length;
        } else {
          category.style.display = 'none';
        }
      });
      
      // Update results count
      if (resultsCount) {
        resultsCount.textContent = visibleCount;
      }
    }
    
    // Add click handlers to brand elements
    brandElements.forEach(element => {
      element.addEventListener('click', function() {
        currentBrand = this.getAttribute('data-brand');
        
        // Update active state
        brandElements.forEach(el => {
          el.classList.remove('active');
          const indicator = el.querySelector('.w-full.h-1');
          if (indicator) indicator.remove();
        });
        
        this.classList.add('active');
        
        // Add active indicator
        const indicator = document.createElement('div');
        indicator.className = 'w-full h-1 bg-primary-600 mt-2 rounded';
        this.appendChild(indicator);
        
        // Filter trucks
        filterTrucksByBrandAndCategory(currentBrand, selectedCategories);
        
        // Scroll to trucks section
        const trucksSection = document.getElementById('trucks-section');
        if (trucksSection) {
          trucksSection.scrollIntoView({ 
            behavior: 'smooth', 
            block: 'start' 
          });
        }
      });
    });
    
    // Add change handlers to category filters
    categoryFilters.forEach(filter => {
      filter.addEventListener('change', function() {
        const category = this.getAttribute('data-category');
        
        if (this.checked) {
          selectedCategories.add(category);
        } else {
          selectedCategories.delete(category);
        }
        
        // Filter trucks
        filterTrucksByBrandAndCategory(currentBrand, selectedCategories);
      });
    });
    
    
    // Initialize with all trucks shown (no brand selected)
    showAllTrucks();
  });
</script>

<style>
  [data-brand].active {
    color: #2563eb;
  }
  
  [data-brand].active span {
    color: #2563eb;
  }
</style>